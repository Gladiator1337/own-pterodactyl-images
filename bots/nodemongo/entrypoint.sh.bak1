#!/bin/bash
set -e

ERROR_LOG="entrypoint_error.log"
> "$ERROR_LOG"  # Alte Logdatei leeren

# ----------------------------\n# Colors via tput\nRED=$(tput setaf 1)\nGREEN=$(tput setaf 2)\nYELLOW=$(tput setaf 3)\nBLUE=$(tput setaf 4)\nCYAN=$(tput setaf 6)\nNC=$(tput sgr0)\n\n# ----------------------------\n# Functions\n# ----------------------------\nmsg() {\n    local color=\"$1\"\n    shift\n    # Wenn ROT, zusÃ¤tzlich in install_error.log schreiben\n    if [ \"$color\" = \"RED\" ]; then\n        printf \"%b\\n\" \"${RED}$*${NC}\" | tee -a \"$ERROR_LOG\" >&2\n    else\n        printf \"%b\\n\" \"${!color}$*${NC}\"\n    fi\n}\n\nline() {\n    local color=\"${1:-BLUE}\"\n    local term_width\n    term_width=$(tput cols 2>/dev/null || echo 70)\n    local sep\n    sep=$(printf '%*s' \"$term_width\" '' | tr ' ' '-')\n    \n    case \"$color\" in\n        RED) COLOR=\"$RED\";;\n        GREEN) COLOR=\"$GREEN\";;\n        YELLOW) COLOR=\"$YELLOW\";;\n        BLUE) COLOR=\"$BLUE\";;\n        CYAN) COLOR=\"$CYAN\";;\n        *) COLOR=\"$NC\";;\n    esac\n    printf \"%b\\n\" \"${COLOR}${sep}${NC}\"\n}\n
# ----------------------------
# Error trap
# ----------------------------
trap 'echo "$(date +%Y-%m-%d %H:%M:%S) - Unexpected error at line $LINENO" | tee -a "$ERROR_LOG" >&2' ERR

# ----------------------------
# Shutdown handler
# ----------------------------
shutdown_mongo() {
    msg YELLOW "Shutting down MongoDB..."
    mongod --dbpath /home/container/mongodb/ --shutdown || msg RED "MongoDB shutdown failed (may not be running)."
}
trap shutdown_mongo SIGTERM SIGINT EXIT

# ----------------------------
# Environment
# ----------------------------
cd /home/container || { msg RED "Failed to change directory to /home/container."; exit 1; }

sleep 1

export TZ=${TZ:-UTC}
export INTERNAL_IP=$(ip route get 1 | awk '{print $(NF-2);exit}')

# ----------------------------
# System Info
# ----------------------------
clear
line BLUE
msg RED "NodeJS & MongoDB Image by gOOvER - https://discord.goover.dev"
msg RED "This Image is licencend under AGPLv3"
line BLUE
msg YELLOW "Running on: ${RED}$(. /etc/os-release ; echo $NAME $VERSION)"
msg YELLOW "Current timezone: ${RED}$(cat /etc/timezone)"
line BLUE
msg YELLOW "NodeJS Version: ${RED}$(node -v)"
msg YELLOW "npm Version: ${RED}$(npm -v)"
msg YELLOW "MongoDB Version: ${RED}$(mongod --version | head -n 1)"
line BLUE

# ----------------------------
# Startup Command
# ----------------------------
MODIFIED_STARTUP=$(echo -e "$(echo -e "${STARTUP}" | sed -e 's/{{/${/g' -e 's/}}/}/g')")
msg YELLOW ":/home/container ${RED}${MODIFIED_STARTUP}"

# ----------------------------
# Start MongoDB
# ----------------------------
line BLUE
msg YELLOW "Starting MongoDB..."
line BLUE
mongod --fork --dbpath /home/container/mongodb/ --port 27017 \
       --logpath /home/container/mongod.log --logRotate reopen --logappend

until nc -z -v -w5 127.0.0.1 27017; do
    msg YELLOW "Waiting for MongoDB connection..."
    sleep 5
done

# ----------------------------
# Start Bot
# ----------------------------
line BLUE
msg YELLOW "Starting Bot..."
line BLUE
eval ${MODIFIED_STARTUP}

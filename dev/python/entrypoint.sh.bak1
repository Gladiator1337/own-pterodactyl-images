#!/bin/bash
set -e

ERROR_LOG="install_error.log"
> "$ERROR_LOG" # Alte Logdatei leeren

# ----------------------------\n# Colors via tput\nRED=$(tput setaf 1)\nGREEN=$(tput setaf 2)\nYELLOW=$(tput setaf 3)\nBLUE=$(tput setaf 4)\nCYAN=$(tput setaf 6)\nNC=$(tput sgr0)\n\n# ----------------------------\n# Functions\n# ----------------------------\nmsg() {\n    local color=\"$1\"\n    shift\n    # Wenn ROT, zusÃ¤tzlich in install_error.log schreiben\n    if [ \"$color\" = \"RED\" ]; then\n        printf \"%b\\n\" \"${RED}$*${NC}\" | tee -a \"$ERROR_LOG\" >&2\n    else\n        printf \"%b\\n\" \"${!color}$*${NC}\"\n    fi\n}\n\nline() {\n    local color=\"${1:-BLUE}\"\n    local term_width\n    term_width=$(tput cols 2>/dev/null || echo 70)\n    local sep\n    sep=$(printf '%*s' \"$term_width\" '' | tr ' ' '-')\n    \n    case \"$color\" in\n        RED) COLOR=\"$RED\";;\n        GREEN) COLOR=\"$GREEN\";;\n        YELLOW) COLOR=\"$YELLOW\";;\n        BLUE) COLOR=\"$BLUE\";;\n        CYAN) COLOR=\"$CYAN\";;\n        *) COLOR=\"$NC\";;\n    esac\n    printf \"%b\\n\" \"${COLOR}${sep}${NC}\"\n}\n
# ----------------------------
# Error trap for uncaught errors
# ----------------------------
trap 'echo "$(date +%Y-%m-%d %H:%M:%S) - Unexpected error at line $LINENO" | tee -a "$ERROR_LOG" >&2' ERR

# stop cleanly on container shutdown
trap "echo 'Received stop signal, shutting down...'; exit" SIGINT SIGTERM

# ----------------------------
# System Info
# ----------------------------
LINUX=$(. /etc/os-release; echo "$PRETTY_NAME")
TIMEZONE=$(if [ -f /etc/timezone ]; then cat /etc/timezone; else readlink /etc/localtime | sed 's|.*/zoneinfo/||'; fi)
PYTHON_VER=$(python --version 2>&1 || echo "Python not found!")

# ----------------------------
# Banner
# ----------------------------
clear
line BLUE
msg YELLOW "Python Image from gOOvER"
msg RED "THIS IMAGE IS LICENSED UNDER AGPLv3"
line BLUE
msg YELLOW "Docker Linux Distribution: ${RED}$LINUX"
msg YELLOW "Current timezone: ${RED}$TIMEZONE"
msg YELLOW "Python Version: ${RED}$PYTHON_VER"
line BLUE

# ----------------------------
# Environment
# ----------------------------
export TZ=${TZ:-UTC}
export INTERNAL_IP=$(ip route get 1 | awk '{print $(NF-2);exit}')

cd /home/container || { msg RED "Failed to change directory to /home/container."; exit 1; }

# ----------------------------
# Startup
# ----------------------------
MODIFIED_STARTUP=$(echo -e $(echo -e ${STARTUP} | sed -e 's/{{/${/g' -e 's/}}/}/g'))
echo -e ":/home/container$ ${MODIFIED_STARTUP}"

eval ${MODIFIED_STARTUP}

